// SvÃ¥righetsnivÃ¥er fÃ¶r ordlistor
export type DifficultyLevel = 'grundlÃ¤ggande' | 'enkla' | 'medel' | 'svÃ¥ra' | 'expert';

// FÃ¶rgenererade ordlistor som Ã¤r hÃ¥rdkodade i kÃ¤llkoden
export interface PredefinedWordList {
  id: string;
  name: string;
  description: string;
  wordIds: string[]; // Array med ord-ID:n som ska vara i listan
  type: 'predefined'; // FÃ¶r att skilja frÃ¥n dynamiska listor
  difficulty: DifficultyLevel; // SvÃ¥righetsnivÃ¥ fÃ¶r ordlistan
}

// Dynamiska ordlistor som genereras frÃ¥n databasen
export interface DynamicWordList {
  id: string;
  name: string;
  description: string;
  subject: string; // Ã„mne att filtrera pÃ¥
  type: 'dynamic'; // FÃ¶r att skilja frÃ¥n fÃ¶rgenererade listor
  difficulty: DifficultyLevel; // SvÃ¥righetsnivÃ¥ fÃ¶r ordlistan
}

// Union type fÃ¶r alla ordlistor
export type WordList = PredefinedWordList | DynamicWordList;

// FÃ¶rgenererade ordlistor
export const predefinedWordLists: PredefinedWordList[] = [
  {
    id: 'handalfabetet',
    name: 'Handalfabetet',
    description: 'Alla ord med Ã¤mnet "Handalfabetet"',
    wordIds: ['handalfabetet'],
    type: 'predefined',
    difficulty: 'grundlÃ¤ggande'
  }
];

// Funktion fÃ¶r att hÃ¤mta alla ordlistor (bÃ¥de fÃ¶rgenererade och dynamiska)
export const getAllWordLists = (database: any): WordList[] => {
  const dynamicLists: DynamicWordList[] = [
    {
      id: 'handalfabetet',
      name: 'Handalfabetet',
      description: 'Alla ord med Ã¤mnet "Handalfabetet"',
      subject: 'Handalfabetet',
      type: 'dynamic',
      difficulty: 'grundlÃ¤ggande'
    },
    {
      id: 'siffror',
      name: 'Siffror',
      description: 'Alla ord med Ã¤mnet "Siffror"',
      subject: 'Siffror',
      type: 'dynamic',
      difficulty: 'grundlÃ¤ggande'
    },
    {
      id: 'bildelar',
      name: 'Bildelar',
      description: 'Alla ord med Ã¤mnet "Bildelar"',
      subject: 'Bildelar',
      type: 'dynamic',
      difficulty: 'medel'
    },
    {
      id: 'klÃ¤der',
      name: 'KlÃ¤der',
      description: 'Alla ord med Ã¤mnet "KlÃ¤der"',
      subject: 'KlÃ¤der',
      type: 'dynamic',
      difficulty: 'enkla'
    },
    {
      id: 'mat',
      name: 'Mat',
      description: 'Alla ord med Ã¤mnet "Mat"',
      subject: 'Mat',
      type: 'dynamic',
      difficulty: 'svÃ¥ra'
    }
  ];

  return [...predefinedWordLists, ...dynamicLists];
};

// Funktion fÃ¶r att hÃ¤mta ord frÃ¥n en ordlista
export const getWordsFromList = (wordList: WordList, database: any): any[] => {
  if (wordList.type === 'predefined') {
    // FÃ¶r fÃ¶rgenererade listor, hÃ¤mta ord baserat pÃ¥ ID:n
    return wordList.wordIds
      .map(id => database[id])
      .filter(word => word !== undefined); // Filtrera bort ord som inte finns
  } else {
    // FÃ¶r dynamiska listor, hÃ¤mta ord baserat pÃ¥ Ã¤mne
    return Object.values(database).filter((word: any) => 
      word.Ã¤mne && word.Ã¤mne.includes(wordList.subject)
    );
  }
};

// Funktion fÃ¶r att hÃ¤mta en specifik ordlista
export const getWordListById = (id: string, database: any): WordList | null => {
  const allLists = getAllWordLists(database);
  return allLists.find(list => list.id === id) || null;
};

// Funktion fÃ¶r att fÃ¥ svÃ¥righetsnivÃ¥ns visuella representation
export const getDifficultyInfo = (difficulty: DifficultyLevel) => {
  switch (difficulty) {
    case 'grundlÃ¤ggande':
      return {
        label: 'GrundlÃ¤ggande',
        icon: 'ğŸŸ¢',
        color: 'success' as const,
        description: 'Allra vanligaste orden'
      };
    case 'enkla':
      return {
        label: 'Enkla',
        icon: 'ğŸ”µ',
        color: 'info' as const,
        description: 'Vardagsbegrepp'
      };
    case 'medel':
      return {
        label: 'Medel',
        icon: 'ğŸŸ¡',
        color: 'warning' as const,
        description: 'Abstraktare ord och fler rÃ¶relsemoment'
      };
    case 'svÃ¥ra':
      return {
        label: 'SvÃ¥ra',
        icon: 'ğŸŸ ',
        color: 'error' as const,
        description: 'Komplexa handformer eller mindre vanliga ord'
      };
    case 'expert':
      return {
        label: 'Expert',
        icon: 'ğŸ”´',
        color: 'error' as const,
        description: 'Mycket sÃ¤llsynta eller facktermer'
      };
    default:
      return {
        label: 'OkÃ¤nd',
        icon: 'âšª',
        color: 'default' as const,
        description: 'OkÃ¤nd svÃ¥righetsnivÃ¥'
      };
  }
};
